import React, { useState } from 'react';

function useData() {
    const [data, setData] = useState(dataInput);
    const [previousData, setPreviousData] = useState(dataToShift);
    const [nextData, setNextData] = useState([]);

    const convertArrayToObj = () => {
        return data.map((array) => {
            let obj = {};
            array.forEach((element, index) => {
                obj[inputColumn[index]] = element;
            });
            return obj;
        });
    };

    const loadOnZoomIn = () => {
        let isNotEmpty = data.length > 15;
        if (isNotEmpty) {
            setPreviousData([...previousData, data.shift()]);
            setNextData([data.pop(), ...nextData]);
            setData([...data]);
        }
    };

    const loadOnZoomOut = () => {
        let newData = [...data];

        if (previousData.length !== 0) {
            newData = [previousData.pop(), ...newData];
        }

        if (nextData.length !== 0) {
            newData = [...newData, nextData.shift()];
        }

        setData([...newData]);
        setPreviousData([...previousData]);
        setNextData([...nextData]);
    };

    const loadOnMouseMove = ({ direction, count }) => {
        switch (direction) {
            case 'right':
                return loadPrevious();
            case 'left':
                return loadNext();
            default:
                break;
        }
    };

    const loadPrevious = () => {
        console.log(`right`);

        let isNotEmpty = previousData.length !== 0 && data.length !== 0;

        if (isNotEmpty) {
            setNextData([data.pop(), ...nextData]);
            setData([previousData.pop(), ...data]);
            setPreviousData([...previousData]);
        }
    };

    const loadNext = () => {
        console.log(`left`);
        let isNotEmpty = nextData.length !== 0 && data.length !== 0;

        if (isNotEmpty) {
            setPreviousData([...previousData, data.shift()]);
            setData([...data, nextData.shift()]);
            setNextData([...nextData]);
        }
    };

    const retunData = convertArrayToObj();

    return { data: retunData, loadOnMouseMove, loadOnZoomIn, loadOnZoomOut };
}

export default useData;

const inputColumn = ['time', 'open', 'high', 'low', 'close', 'volume', 'empty'];

const dataToShift = [
    ['1615532520000', 50000.0, 56000.0, 40000.0, 55000.0, 4.0, ' '],
    ['1615802100000', 55000.0, 58000.0, 39000.0, 49000.0, 10.0, ' '],
    ['1615966560000', 49000.0, 49000.0, 29000.0, 43000.0, 51.0, ' '],
    ['1616053080000', 49000.0, 49000.0, 49000.0, 49000.0, 45.0, ' '],
    ['1616147220000', 49000.0, 49000.0, 49000.0, 49000.0, 30.0, ' '],
    ['1616408220000', 49000.0, 50100.0, 48000.0, 50100.0, 73.0, ' '],
    ['1616490600000', 50100.0, 55000.0, 10000.0, 55000.0, 440.0, ' '],
    ['1616579100000', 58000.0, 58000.0, 44000.0, 44000.0, 26.0, ' '],
    ['1616658360000', 52000.0, 80000.0, 1000.0, 49000.0, 193.0, ' '],
    ['1616745480000', 50000.0, 80000.0, 1000.0, 20000.0, 117.0, ' '],
    ['1616998020000', 45000.0, 56000.0, 20000.0, 45000.0, 22.0, ' '],
    ['1617078840000', 45000.0, 50000.0, 40500.0, 48500.0, 19.0, ' '],
    ['1617177240000', 45000.0, 73000.0, 45000.0, 62000.0, 46.0, ' '],
    ['1617270420000', 55000.0, 78000.0, 50000.0, 70000.0, 113.0, ' '],
    ['1617342360000', 70000.0, 70000.0, 55000.0, 55000.0, 38.0, ' '],
    ['1617617460000', 55000.0, 55300.0, 52000.0, 55000.0, 100.0, ' '],
    ['1617695940000', 55000.0, 80000.0, 52000.0, 55500.0, 145.0, ' '],
    ['1617788040000', 55500.0, 55500.0, 50000.0, 54500.0, 22.0, ' '],
    ['1617872520000', 50100.0, 76000.0, 47000.0, 56000.0, 114.0, ' '],
    ['1617951120000', 58500.0, 58500.0, 47000.0, 47000.0, 26.0, ' '],
    ['1618210320000', 55550.0, 55550.0, 11000.0, 35000.0, 45.0, ' '],
    ['1618295520000', 55000.0, 57000.0, 53500.0, 53500.0, 49.0, ' '],
    ['1618495200000', 53500.0, 57000.0, 25000.0, 25000.0, 118.0, ' '],
];

const dataInput = [
    // original data
    ['1618539660000', 25000.0, 25000.0, 25000.0, 25000.0, 1.0, ' '],
    ['1618554060000', 25000.0, 55000.0, 25000.0, 55000.0, 9.0, ' '],
    ['1618796520000', 55000.0, 55000.0, 55000.0, 55000.0, 3.0, ' '],
    ['1618816800000', 55000.0, 56400.0, 25000.0, 44000.0, 157.0, ' '],
    ['1618896360000', 50000.0, 50000.0, 50000.0, 50000.0, 9.0, ' '],
    ['1618966980000', 49000.0, 49000.0, 49000.0, 49000.0, 1.0, ' '],
    ['1618990620000', 49000.0, 56000.0, 38000.0, 44000.0, 392.0, ' '],
    ['1619059560000', 50000.0, 50000.0, 50000.0, 50000.0, 1.0, ' '],
    ['1619068860000', 50000.0, 50000.0, 35000.0, 43000.0, 58.0, ' '],
    ['1619149920000', 43000.0, 43000.0, 43000.0, 43000.0, 3.0, ' '],
    ['1619168820000', 43000.0, 63400.0, 35000.0, 56000.0, 51.0, ' '],
    ['1619234820000', 50000.0, 50000.0, 50000.0, 50000.0, 2.0, ' '],
    // ['1619234820000', 50000.0, 50000.0, 50000.0, 50000.0, 2.0, ' '],
    ['1619404440000', 56000.0, 56000.0, 56000.0, 56000.0, 1.0, ' '],
    ['1619423040000', 56000.0, 113700.0, 5000.0, 65000.0, 118.0, ' '],
    // ['1619528700000', 65000.0, 65000.0, 65000.0, 65000.0, 1.0, ' '],
    ['1619528700000', 65000.0, 65000.0, 65000.0, 65000.0, 1.0, ' '],
    ['1619592660000', 65000.0, 65000.0, 65000.0, 65000.0, 3.0, ' '],
    // ['1619592660000', 65000.0, 65000.0, 65000.0, 65000.0, 1.0, ' '],
    ['1619657640000', 65000.0, 65000.0, 65000.0, 65000.0, 2.0, ' '],
    ['1619704680000', 65000.0, 75000.0, 32000.0, 32000.0, 142.0, ' '],
    ['1619762460000', 59000.0, 59000.0, 59000.0, 59000.0, 1.0, ' '],
    // ['1619762460000', 59000.0, 59000.0, 59000.0, 59000.0, 1.0, ' '],
    ['1620019800000', 60000.0, 60000.0, 60000.0, 60000.0, 1.0, ' '],
    // ['1620019800000', 60000.0, 60000.0, 60000.0, 60000.0, 1.0, ' '],
    ['1620094980000', 60000.0, 60000.0, 60000.0, 60000.0, 1.0, ' '],
    ['1620119940000', 60000.0, 60000.0, 30000.0, 55000.0, 259.0, ' '],
    ['1620269040000', 55000.0, 55000.0, 55000.0, 55000.0, 1.0, ' '],
    ['1620307200000', 55000.0, 60000.0, 45000.0, 46500.0, 20.0, ' '],
    ['1620624300000', 46000.0, 47700.0, 45000.0, 47700.0, 8.0, ' '],
    ['1620718260000', 47700.0, 76500.0, 30000.0, 70000.0, 124.0, 'B'],
    ['1620914220000', 56000.0, 79000.0, 19500.0, 79000.0, 18.0, 'B'],
    ['1621255200000', 54000.0, 77000.0, 54000.0, 54000.0, 45.0, 'S'],
    ['1621302000000', 54000.0, 54000.0, 50000.0, 50000.0, 43.0, 'B'],
    ['1621475100000', 44000.0, 44000.0, 44000.0, 44000.0, 1.0, 'S'],
];
